# set a fancy prompt
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi
# for better prompt (BFG Specific)
export DOTDOMAINNAME=${HOSTNAME/#${HOSTNAME%.*.*}/}
HOSTSTRING=${HOSTNAME/${DOTDOMAINNAME}/}
if [ "$color_prompt" = yes ]; then
    # default to teal prompt
    PSHEAD="\u@${HOSTSTRING/${DOTDOMAINNAME}/}\e[0;37m:\w"
    PSCOLOR="\e[0;36m"
    if [[ $HOSTNAME =~ \.(sea|ash) ]]; then
        # red prompt for important hosts
        PSHEAD="\e[0;31m${PSHEAD}"
    elif [[ $HOSTNAME =~ svn\.dev|\.(st|qast) ]]; then
        # yellow prompt for semi-important hosts
        PSHEAD="\e[0;33m${PSHEAD}"
    elif [[ $HOSTNAME =~ chunter-desktop ]]; then
        # teal prompt for workstation
        PSHEAD="\e[0;36m${PSHEAD}"
    else
        # green prompt
        PSHEAD="\e[0;32m${PSHEAD}"
    fi
else
    PSHEAD='\u@${HOSTSTRING}'
fi

# Prompt info that should come after the git information
PSTAIL="\n[\t] \$ "

# add git prompt settings if available
if [ -f ~/.bash-git-prompt/gitprompt.sh ]; then
    source ~/.bash-git-prompt/gitprompt.sh
    GIT_PROMPT_START=$PSHEAD
    GIT_PROMPT_END=$PSTAIL
    GIT_PROMPT_ONLY_IN_REPO=1
else
    PS1=${PSHEAD}${PSTAIL}
fi

unset color_prompt force_color_prompt
